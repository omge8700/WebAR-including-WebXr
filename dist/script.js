import"./style.css";import*as THREE from"three";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";console.log(OrbitControls);import gsap from"gsap";import GUI from"lil-gui";const gui=new dat.GUI,cubeTextureLoader=new THREE.CubeTextureLoader,environmentMapTexture=cubeTextureLoader.load(["C:UsersKIITDesktopWEBXR courseWEBXR4static\texturesenvironmentMaps\0px.jpg"]),canvas=document.querySelector("canvas.webgl"),scene=new THREE.Scene,material=new THREE.MeshBasicMaterial,CubeGeometry=new THREE.BoxGeometry(3,4,5),cube=new THREE.Mesh(CubeGeometry,material);scene.add(Cube);const sizes={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",(()=>{sizes.width=window.innerWidth,sizes.height=window.innerHeight,console.log("window has been resized"),camera.aspect=sizes.width/sizes.height,camera.updateProjectionMatrix(),renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))})),window.addEventListener("dblclick",(()=>{document.fullscreenElement||document.webkitFullscreenElement,document.fullscreenElement?(document.exitFullscreen(),console.log("leave fullscreen")):(canvas.requestFullscreen(),console.log("go fullscreen"))}));const aspectRatio=sizes.width/sizes.height;console.log(aspectRatio);const camera=new THREE.PerspectiveCamera(75,sizes.width/sizes.height);camera.position.z=3,camera.position.x=3,camera.position.y=3,scene.add(camera);const controls=new OrbitControls(camera,canvas);controls.enableDamping=!0,controls.enableDamping=!0;const renderer=new THREE.WebGLRenderer({canvas});renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),renderer.render(scene,camera);const clock=new THREE.Clock,tick=()=>{const e=clock.getElapsedTime();sphere.rotation.y=.5*e,plane.rotation.y=.5*e,torus.rotation.y=.1*e,sphere.rotation.x=.15*e,controls.update(),renderer.render(scene,camera),window.requestAnimationFrame(tick)};tick();